---
import "@fontsource/source-code-pro/300.css";
import "@fontsource/source-code-pro/400.css";

const numberLine = (line: number) => `${line} |`
---

<div class="code">
  <p class="code-line1">
    <span class="number-line">{numberLine(1)}</span>
    <span class="keyWord">import</span>
    <span>
      <span class="bracket-unicode">&lbrace;</span>
      <span class="variable">presentation</span>
      <span class="bracket-unicode">&rbrace;</span>
    </span>
    <span class="keyWord">from</span>
    <span class="route">"@data/content.ts" ;</span>
  </p>
  <div class="code-line2">
    <span class="number-line">{numberLine(2)}</span>
  </div>
  <div class="code-line3">
    <span class="number-line">{numberLine(3)}</span>
    <p class="code-content">
      <span>
        document.
        <span style={{ color: "#61afef" }}>write</span>
      </span>
      <span class="spacing" style={{ color: "#FAD40F" }}>{"\u0028"}</span>
      <span class="variable">presentation</span>
      <span style={{ color: "#FAD40F" }}>{"\u0029"} ;</span>
    </p>
  </div>
</div>

<style lang="scss">
  $speed: 3s;
  $color: #0e1630;
  $characters: 31;
  $delay: 2s;

  .code {
    width: 100%;
    font-size: var(--font-md);
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    background-color: $color;
    border-radius: 0.5rem;
    padding: 0.5rem;
    font-weight: initial;
    transform-origin: center;
    animation: scaleAndHidden .3s ease calc($speed + $delay) forwards;

    &-line1,
    &-line2,
    &-line3 {
      display: flex;
      align-items: center;
    }

    &-line1 {
      gap: .5rem;
    }

    &-line2 {
      color: transparent;
      user-select: none;
    }

    &-line3{
      display: flex;
    }

    &-content {
      display: flex;
      align-items: center;
      font-family: "Source Code Pro", monospace;
      position: relative;
      width: max-content;

      &::before,
      &::after {
        content: "";
        position: absolute;
        inset: 0;
      }

      &::before {
        background-color: $color;
        animation: typewriter $speed steps($characters) 1s forwards;
      }

      &::after {
        width: 0.125em;
        background-color: #fff;
        animation:
          typewriter $speed steps($characters) 1s forwards,
          blink .75s steps($characters) infinite;
      }
    }
  }

  .number-line {
    font-size: var(--font-base);
    color: #ffffffd7;
    padding-right: 0.7rem;
  }

  .bracket-unicode {
    color: #FAD40F;
  }

  .variable {
    color: rgb(6, 219, 219);
    font-weight: 600;
    padding-inline: .2rem;
  }

  .keyWord {
    color: #c678dd;
  }

  .route {
    color: rgb(5, 175, 5);
  }
</style>

